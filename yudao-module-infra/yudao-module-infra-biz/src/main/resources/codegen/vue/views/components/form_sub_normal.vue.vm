#set ($subTable = $subTables.get($subIndex))##当前表
#set ($subColumns = $subColumnsList.get($subIndex))##当前字段数组
#set ($subJoinColumn = $subJoinColumns.get($subIndex))##当前 join 字段
#set ($subSimpleClassName = $subSimpleClassNames.get($subIndex))
#set ($subJoinColumn = $subJoinColumns.get($subIndex))##当前 join 字段
#set ($SubJoinColumnName = $subJoinColumn.javaField.substring(0,1).toUpperCase() + ${subJoinColumn.javaField.substring(1)})##首字母大写

<template>
  <div class="app-container">
#if ( $subTable.subJoinMany )## 情况一：一对多，table + form
      <el-form
          ref="formRef"
          :model="formData"
          :rules="formRules"
          v-loading="formLoading"
          label-width="0px"
          :inline-message="true"
      >
##        // TODO puhui999: 看看样式是否需要调整
        <el-table :data="formData" class="-mt-10px">
          <el-table-column label="序号" type="index" width="100" />
            #foreach($column in $subColumns)
                #if ($column.createOperation || $column.updateOperation)
                    #set ($dictType = $column.dictType)
                    #set ($javaField = $column.javaField)
                    #set ($javaType = $column.javaType)
                    #set ($AttrName = $column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                    #set ($comment = $column.columnComment)
                    #if ( $column.id == $subJoinColumn.id) ## 特殊：忽略主子表的 join 字段，不用填写
                    #elseif ($column.htmlType == "input" && !$column.primaryKey)## 忽略主键，不用在表单里
                      <el-table-column label="${comment}" min-width="150">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <el-input v-model="row.${javaField}" placeholder="请输入${comment}" />
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "imageUpload")## 图片上传
                        #set ($hasImageUploadColumn = true)
                      <el-table-column label="${comment}" min-width="200">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <ImageUpload v-model="row.${javaField}"/>
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "fileUpload")## 文件上传
                        #set ($hasFileUploadColumn = true)
                      <el-table-column label="${comment}" min-width="200">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <FileUpload v-model="row.${javaField}"/>
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "editor")## 文本编辑器
                        #set ($hasEditorColumn = true)
                      <el-table-column label="${comment}" min-width="400">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <editor v-model="row.${javaField}" :min-height="192"/>
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "select")## 下拉框
                      <el-table-column label="${comment}" min-width="150">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <el-select v-model="row.${javaField}" placeholder="请选择${comment}">
                                #if ("" != $dictType)## 有数据字典
                                  <el-option v-for="dict in this.getDictDatas(DICT_TYPE.$dictType.toUpperCase())"
                                             :key="dict.value" :label="dict.label" #if ($column.javaType == "Integer" || $column.javaType == "Long"):value="parseInt(dict.value)"#else:value="dict.value"#end />
                                #else##没数据字典
                                  <el-option label="请选择字典生成" value="" />
                                #end
                            </el-select>
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "checkbox")## 多选框
                      <el-table-column label="${comment}" min-width="150">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <el-checkbox-group v-model="row.${javaField}">
                                #if ("" != $dictType)## 有数据字典
                                  <el-checkbox v-for="dict in this.getDictDatas(DICT_TYPE.$dictType.toUpperCase())"
                                               :key="dict.value" #if($column.javaType == "Integer" || $column.javaType == "Long"):label="parseInt(dict.value)"#else:label="dict.value"#end>{{dict.label}}</el-checkbox>
                                #else##没数据字典
                                  <el-checkbox>请选择字典生成</el-checkbox>
                                #end
                            </el-checkbox-group>
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "radio")## 单选框
                      <el-table-column label="${comment}" min-width="150">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <el-radio-group v-model="row.${javaField}">
                                #if ("" != $dictType)## 有数据字典
                                  <el-radio v-for="dict in this.getDictDatas(DICT_TYPE.$dictType.toUpperCase())"
                                            :key="dict.value" #if($column.javaType == "Integer" || $column.javaType == "Long"):label="parseInt(dict.value)"
                                            #else:label="dict.value"#end>{{dict.label}}</el-radio>
                                #else##没数据字典
                                  <el-radio label="1">请选择字典生成</el-radio>
                                #end
                            </el-radio-group>
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "datetime")## 时间框
                      <el-table-column label="${comment}" min-width="150">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <el-date-picker
                                v-model="row.${javaField}"
                                type="date"
                                value-format="x"
                                placeholder="选择${comment}"
                            />
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #elseif($column.htmlType == "textarea")## 文本框
                      <el-table-column label="${comment}" min-width="200">
                        <template slot-scope="{ row, $index }">
                          <el-form-item :prop="`${$index}.${javaField}`" :rules="formRules.${javaField}" class="mb-0px!">
                            <el-input v-model="row.${javaField}" type="textarea" placeholder="请输入${comment}" />
                          </el-form-item>
                        </template>
                      </el-table-column>
                    #end
                #end
            #end
          <el-table-column align="center" fixed="right" label="操作" width="60">
            <template slot-scope="{ $index }">
              <el-button @click="handleDelete($index)" link>—</el-button>
            </template>
          </el-table-column>
        </el-table>
      </el-form>
  <el-row justify="center" class="mt-3">
    <el-button @click="handleAdd" round>+ 添加${subTable.classComment}</el-button>
  </el-row>
#end
  </div>
</template>

<script>
  import * as ${simpleClassName}Api from '@/api/${table.moduleName}/${table.businessName}'
      #if ($hasImageUploadColumn)
      import ImageUpload from '@/components/ImageUpload';
      #end
      #if ($hasFileUploadColumn)
      import FileUpload from '@/components/FileUpload';
      #end
      #if ($hasEditorColumn)
      import Editor from '@/components/Editor';
      #end
  export default {
    name: "${simpleClassName}",
    components: {
        #if ($hasImageUploadColumn)
          ImageUpload,
        #end
        #if ($hasFileUploadColumn)
          FileUpload,
        #end
        #if ($hasEditorColumn)
          Editor,
        #end
    },
    data() {
      return {
        // 弹出层标题
        dialogTitle: "",
        // 是否显示弹出层
        dialogVisible: false,
        // 表单的加载中：1）修改时的数据加载；2）提交的按钮禁用
        formLoading: false,
        // 表单参数
        formData: {
            #foreach ($column in $columns)
                #if ($column.createOperation || $column.updateOperation)
                    #if ($column.htmlType == "checkbox")
                            $column.javaField: [],
                    #else
                            $column.javaField: undefined,
                    #end
                #end
            #end
        },
        // 表单校验
        formRules: {
            #foreach ($column in $columns)
                #if (($column.createOperation || $column.updateOperation) && !$column.nullable && !${column.primaryKey})## 创建或者更新操作 && 要求非空 && 非主键
                    #set($comment=$column.columnComment)
                        $column.javaField: [{ required: true, message: "${comment}不能为空", trigger: #if($column.htmlType == "select")"change"#else"blur"#end }],
                #end
            #end
        },
      };
    },
    props:{
      ${subJoinColumn.javaField}: undefined // ${subJoinColumn.columnComment}（主表的关联字段）
    },
    methods: {
        #if ( $subTable.subJoinMany )

          /** 新增按钮操作 */
        handleAdd(){
            const row = {
                #foreach ($column in $subColumns)
                    #if ($column.createOperation || $column.updateOperation)
                        #if ($column.htmlType == "checkbox")
                                $column.javaField: [],
                        #else
                                $column.javaField: undefined,
                        #end
                    #end
                #end
            }
            row.${subJoinColumn.javaField} = this.${subJoinColumn.javaField}
            this.formData.push(row)
          },

          /** 删除按钮操作 */
        handleDelete(index) {
            this.formData.splice(index, 1)
          },
        #end
      /** 表单值 */
      getData() {
        return this.formData
      },
      /** 表单校验 */
      validate() {

      }
    }
  };
</script>
